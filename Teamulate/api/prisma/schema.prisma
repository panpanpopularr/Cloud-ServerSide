generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  ACTIVE
  UNASSIGNED
  CANCELED
  REVIEW
  DONE
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  tasks     Task[]   @relation("TaskCreator")
  createdAt DateTime @default(now())
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())

  tasks    Task[]
  files    File[]
  activity Activity[]
}

model Task {
  id          String     @id @default(uuid())
  projectId   String
  title       String
  description String?
  status      TaskStatus @default(UNASSIGNED)
  deadline    DateTime?
  createdById String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  project Project @relation(fields: [projectId], references: [id])
  creator User    @relation("TaskCreator", fields: [createdById], references: [id])
}

model File {
  id         String   @id @default(uuid())
  projectId  String
  name       String
  s3Key      String
  size       Int
  mimeType   String
  uploadedBy String
  createdAt  DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id])
}

model Activity {
  id        String   @id @default(uuid())
  projectId String
  type      String
  payload   Json
  createdAt DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id])
}
