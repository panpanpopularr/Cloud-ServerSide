generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  tasks       Task[]
  files       File[]
  activities  Activity[]
}

model Task {
  id          String     @id @default(uuid())
  projectId   String
  title       String
  description String?
  status      TaskStatus @default(UNASSIGNED)
  deadline    DateTime?
  createdById String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  project     Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model File {
  id           String   @id @default(uuid())
  projectId    String

  // ชั่วคราว: ทำให้เป็น optional ก่อน
  filename     String?     // << ชั่วคราว
  originalname String?     // << ชั่วคราว
  mimetype     String?     // << ชั่วคราว
  size         Int
  uploadedAt   DateTime?   // << ชั่วคราว

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}


model Activity {
  id        String   @id @default(uuid())
  projectId String
  type      String
  payload   Json
  createdAt DateTime @default(now())
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

enum TaskStatus {
  ACTIVE
  UNASSIGNED
  CANCELED
  REVIEW
  DONE
}
